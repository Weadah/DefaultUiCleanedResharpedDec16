<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ap="clr-namespace:DefaultUiCleanedResharpedDec16.Assets.AttachedProperties">


    <Style TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseOut}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource FontFamilyInterFace}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource FontSize10}" />
        <Setter Property="TextElement.FontWeight" Value="Heavy" />
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundButtonMouseOut}"/>
        <Setter Property="Border.BorderBrush" Value="{DynamicResource BorderButtonMouseOut}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Border.BorderThickness" Value="1"/>
        <Setter Property="Border.CornerRadius" Value="1"/>
        <Setter Property="Padding" Value="4,2,4,0"/>
        <Setter Property="HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border Background="{TemplateBinding Panel.Background}" 
                            BorderBrush="{TemplateBinding Border.BorderBrush}"  
                            BorderThickness="{TemplateBinding Border.BorderThickness}"  
                            CornerRadius="{TemplateBinding Border.CornerRadius}" 
                            Name="Chrome" SnapsToDevicePixels="True">

                        <ContentPresenter RecognizesAccessKey="True" 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                            Margin="{TemplateBinding Control.Padding}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonMouseOver}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundButtonMouseOver}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseOver}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonFocused}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderControlDisabled}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundControlDisabled}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextControlDisabled}"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonMouseDown}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundButtonMouseDown}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseOut}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource FontFamilyInterFace}" />
        <Setter Property="TextElement.FontSize" Value="{DynamicResource FontSize10}" />
        <Setter Property="TextElement.FontWeight" Value="Heavy" />
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundButtonMouseOut}"/>
        <Setter Property="Border.BorderBrush" Value="{DynamicResource BorderButtonMouseOut}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Border.BorderThickness" Value="1"/>
        <Setter Property="Border.CornerRadius" Value="1"/>
        <Setter Property="Padding" Value="4,2,4,0"/>
        <Setter Property="HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border Background="{TemplateBinding Panel.Background}" 
                            BorderBrush="{TemplateBinding Border.BorderBrush}"  
                            BorderThickness="{TemplateBinding Border.BorderThickness}"  
                            CornerRadius="{TemplateBinding Border.CornerRadius}" 
                            Name="Chrome" SnapsToDevicePixels="True">

                        <ContentPresenter RecognizesAccessKey="True" 
                            Content="{TemplateBinding ContentControl.Content}" 
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                            ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                            Margin="{TemplateBinding Control.Padding}" 
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="False" />
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonMouseOver}"/>
                                <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundButtonMouseOver}"/>
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseOver}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonFocused}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonIsChecked}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundButtonIsChecked}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonIsChecked}"/>
                        </Trigger>

                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderControlDisabled}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundControlDisabled}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextControlDisabled}"/>
                        </Trigger>

                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="Chrome" Value="{DynamicResource BorderButtonMouseDown}"/>
                            <Setter Property="Panel.Background" TargetName="Chrome" Value="{DynamicResource BackgroundButtonMouseDown}"/>
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource TextButtonMouseDown}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SlideButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource TextInterfaceDark}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize10}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyInterFace}" />
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundOnOffButtonMouseOut}"/>
        <Setter Property="Padding" Value="3,1,0,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">

                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HandleTransform" Storyboard.TargetProperty="X">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="25.99" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_TickTransform" Storyboard.TargetProperty="X">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="5" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimation Duration="0:0:0.08" To="31.9" Storyboard.TargetProperty="X2" Storyboard.TargetName="PART_Slider" />
                                        <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Tick" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unchecked" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HandleTransform" Storyboard.TargetProperty="X">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_TickTransform" Storyboard.TargetProperty="X">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetProperty="X2" Storyboard.TargetName="PART_Slider" />
                                        <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Tick" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>

                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_HandleTransform" Storyboard.TargetProperty="X">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0.08" Value="12.9" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimation Duration="0:0:0.08" To="15.9" Storyboard.TargetProperty="X2" Storyboard.TargetName="PART_Slider" />

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>


                            <VisualStateGroup x:Name="CommonStates">

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Content" />
                                        <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Slider" />
                                        <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Handle" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Slider" />
                                        <DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Handle" />
                                        <DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Content" />
                                    </Storyboard>
                                </VisualState>



                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" x:Name="LeftCol" />
                            <ColumnDefinition Width="Auto"  x:Name="RightCol" />
                        </Grid.ColumnDefinitions>

                        <Border Background="Transparent" Grid.Column="0" Margin="-1,0,0,0">
                            <Grid Margin="2,0">
                                <Line Stroke="{TemplateBinding Panel.Background}"                     
                                    StrokeStartLineCap="Round" 
                                    StrokeEndLineCap="Round" 
                                    StrokeThickness="14" SnapsToDevicePixels="True" UseLayoutRounding="False"
                                    X1="6" X2="32" Y1="7" Y2="7" />

                                <Line Name="PART_Slider" 
                                    Stroke="{DynamicResource BackgroundOnOffButtonIsChecked}" 
                                    StrokeStartLineCap="Round" 
                                    StrokeEndLineCap="Round" 
                                    StrokeThickness="13" SnapsToDevicePixels="True" UseLayoutRounding="False"
                                    X1="6.1" X2="6.099" Y1="7" Y2="7" />

                                <Path x:Name="PART_Tick"
                                    Height="8" 
                                    Width="10"
                                    Stretch="Fill"
                                    Opacity="0" 
                                    HorizontalAlignment="Left"
                                    Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
                                    Fill="{DynamicResource AccentBase}"
                                    UseLayoutRounding="False">
                                    <Path.RenderTransform>
                                        <TranslateTransform x:Name="PART_TickTransform" X="0" />
                                    </Path.RenderTransform>
                                </Path>

                                <Ellipse x:Name="PART_Handle" 
                                    Width="12" Height="12" 
                                    HorizontalAlignment="Left" 
                                    Fill="{DynamicResource BackgroundOnOffButtonHandleMouseOut}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform x:Name="PART_HandleTransform" X="0" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                            </Grid>
                        </Border>

                        <Border Background="Transparent" Grid.Column="1">
                            <ContentPresenter RecognizesAccessKey="True" x:Name="PART_Content" 
                                Content="{TemplateBinding Content}" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                Margin="{TemplateBinding Control.Padding}" 
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Handle" Value="{DynamicResource BackgroundOnOffButtonHandleMouseOver}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="PART_Handle" Value="{DynamicResource BackgroundOnOffButtonHandleIsChecked}"/>
                        </Trigger>

                        <Trigger Property="ToggleButton.IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="PART_Tick" Value="{DynamicResource TextControlDisabled}"/>
                        </Trigger>

                        <Trigger Property="ap:CheckBoxFlowDirection.ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="0,0,6,0" />
                            <Setter TargetName="PART_Slider" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_Content" Property="Grid.Column" Value="0" />
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>